name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  linux:
    name: Test - Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Clone autotimeseries
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v1
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('sdk/python-autotimeseries/environment.yml') }}

      - name: Set up environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: autotimeseries
          environment-file: sdk/python-autotimeseries/environment.yml
          use-only-tar-bz2: true

      - name: Install autotimeseries
        shell: bash -l {0}
        run: pip install sdk/python-autotimeseries/

      - name: Read all notebooks
        shell: bash -l {0}
        working-directory: sdk/python-autotimeseries
        run: nbdev_read_nbs

      - name: Check if all notebooks are cleaned
        shell: bash -l {0}
        working-directory: sdk/python-autotimeseries
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          nbdev_clean_nbs
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi

      - name: Check if there is no diff library/notebooks
        shell: bash -l {0}
        working-directory: sdk/python-autotimeseries
        run: |
          if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi

      - name: Run tests
        shell: bash -l {0}
        working-directory: sdk/python-autotimeseries
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          API_ID: ${{ secrets.API_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          nbdev_test_nbs
